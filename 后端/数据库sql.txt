-- 1. 用户表 (user)
CREATE TABLE user (
    user_id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(100) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    phone VARCHAR(20),
    avatar_url VARCHAR(255),
    bio TEXT,
    role ENUM('enthusiast', 'coser', 'post_production', 'photographer', 'makeup_artist', 'organizer') NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 2. coser作品表 (coser_works)
CREATE TABLE coser_works (
    work_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    title VARCHAR(255) NOT NULL,
    original_work VARCHAR(255),
    character_name VARCHAR(255),
    content TEXT,
    image_url VARCHAR(255),
    publish_date TIMESTAMP,
    read_count INT DEFAULT 0,
    photographer_id INT,
    makeup_artist_id INT,
    post_production_id INT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(user_id),
    FOREIGN KEY (photographer_id) REFERENCES users(user_id),
    FOREIGN KEY (makeup_artist_id) REFERENCES users(user_id),
    FOREIGN KEY (post_production_id) REFERENCES users(user_id)
);

增加”类别”字段：
ALTER TABLE coser_works
ADD COLUMN category VARCHAR(100) NOT NULL AFTER created_at;

-- 3. 主办方信息表 (organizer_info)
CREATE TABLE organizer_info (
    organizer_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT UNIQUE,  -- 确保每个 user_id 对应唯一的 organizer_id
    name VARCHAR(255) NOT NULL,
    headquarters_city VARCHAR(255),
    description TEXT,
    logo_url VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(user_id)
);

-- 4. 主办方信息发布表 (organizer_info_posts)
CREATE TABLE organizer_info_posts (
    post_id INT AUTO_INCREMENT PRIMARY KEY,
    organizer_id INT,
    title VARCHAR(255) NOT NULL,
    content TEXT,
    main_image_url VARCHAR(255),
    detail_images TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    location TEXT,
    event_time TEXT,
    FOREIGN KEY (organizer_id) REFERENCES organizer_info(organizer_id)
);

-- 5. 摄影作品表 (photography_works)
/*CREATE TABLE photography_works (
    work_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    image_url VARCHAR(255) NOT NULL,
    description TEXT,
    publish_date TIMESTAMP,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    read_count INT DEFAULT 0,
    FOREIGN KEY (user_id) REFERENCES users(user_id)
);*/

删除原有表
SET FOREIGN_KEY_CHECKS = 0;
DROP TABLE IF EXISTS photography_works;
SET FOREIGN_KEY_CHECKS = 1;

-- 修改后的摄影作品表 (photography_works)
CREATE TABLE photography_works (
    work_id INT AUTO_INCREMENT PRIMARY KEY, -- 作品ID，主键，自增长
    user_id INT,                            -- 发布者用户ID，外键
    title VARCHAR(255),                     -- 作品标题
    original_work VARCHAR(255),             -- 原作名称（例如动漫、电影等）
    character_name VARCHAR(255),            -- 角色名称
    content TEXT,                           -- 作品介绍
    image_url VARCHAR(255),                 -- 作品图片的 URL
    publish_date TIMESTAMP,                 -- 发布日期
    read_count INT DEFAULT 0,               -- 阅读次数，默认为 0
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- 创建时间，默认当前时间
    FOREIGN KEY (user_id) REFERENCES user(user_id) -- 用户ID外键
);

增加”类别”字段：
ALTER TABLE photography_works
ADD COLUMN category VARCHAR(100) NOT NULL AFTER created_at;

-- 6. 社团表 (societies)
CREATE TABLE societies (
    society_id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    founder_id INT,
    main_city VARCHAR(255),
    description TEXT,
    logo_url VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (founder_id) REFERENCES users(user_id)
);

-- 7. 社团成员表 (society_members)
CREATE TABLE society_members (
    member_id INT AUTO_INCREMENT PRIMARY KEY,
    society_id INT,
    user_id INT,
    role ENUM('member', 'admin', 'leader') NOT NULL,
    joined_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (society_id) REFERENCES societies(society_id),
    FOREIGN KEY (user_id) REFERENCES users(user_id)
);

-- 8. 社团信息发布表 (society_info_posts)
CREATE TABLE society_info_posts (
    post_id INT AUTO_INCREMENT PRIMARY KEY,
    society_id INT,
    title VARCHAR(255) NOT NULL,
    content TEXT,
    main_image_url VARCHAR(255),
    detail_images TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (society_id) REFERENCES societies(society_id)
);

-- 9. 求助表 (help_requests)
CREATE TABLE help_requests (
    request_id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    title VARCHAR(255) NOT NULL,
    event_date DATE,
    duration INT,
    image_url VARCHAR(255),
    description TEXT,
    phone VARCHAR(20),
    contact VARCHAR(255),
    fee DECIMAL(10, 2),
    city VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(user_id)
);
增加字段表示是否解决求助
ALTER TABLE help_requests
ADD COLUMN is_resolved BOOLEAN DEFAULT FALSE COMMENT '求助是否解决';

-- 10. 评论表 (comments for coser works)
CREATE TABLE comments (
    comment_id INT AUTO_INCREMENT PRIMARY KEY,
    work_id INT,
    user_id INT,
    content TEXT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (work_id) REFERENCES coser_works(work_id),
    FOREIGN KEY (user_id) REFERENCES users(user_id)
);

-- 11. 摄影作品评论表 (comments for photography)
CREATE TABLE comments_for_photography (
    comment_id INT AUTO_INCREMENT PRIMARY KEY,
    work_id INT,
    user_id INT,
    content TEXT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (work_id) REFERENCES photography_works(work_id),
    FOREIGN KEY (user_id) REFERENCES users(user_id)
);

-- 12.主办方信息评论表 (comments for organizer_info_posts)
CREATE TABLE comments_for_organizer_info_posts (
    comment_id INT AUTO_INCREMENT PRIMARY KEY,  -- 评论ID，自增长
    post_id INT,  -- 发布信息ID，外键，指向主办方信息发布表
    user_id INT,  -- 评论者用户ID，外键，指向用户表
    content TEXT,  -- 评论内容
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,  -- 评论时间，默认当前时间
    FOREIGN KEY (post_id) REFERENCES organizer_info_posts(post_id),  -- 外键关联发布信息ID
    FOREIGN KEY (user_id) REFERENCES user(user_id)  -- 外键关联用户ID
);

--society_applications社团申请表
CREATE TABLE society_applications (
    application_id INT AUTO_INCREMENT PRIMARY KEY, -- 主键，自增
    society_id INT NOT NULL,                       -- 关联的社团ID
    user_id INT NOT NULL,                          -- 申请者的用户ID
    status VARCHAR(20) NOT NULL DEFAULT 'pending', -- 申请状态：pending, approved, rejected
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP, -- 申请创建时间
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, -- 状态更新时间
    FOREIGN KEY (society_id) REFERENCES societies(society_id) ON DELETE CASCADE, -- 关联社团表
    FOREIGN KEY (user_id) REFERENCES user(user_id) ON DELETE CASCADE            -- 关联用户表
);

